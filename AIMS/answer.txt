Question 1: Lớp nào nên implement interface Comparable?
Media
Question 2: Làm thế nào để triển khai phương thức compareTo() để phản ánh thứ tự mà chúng ta muốn?
Trả lời: Phương thức compareTo() trong lớp Media nên so sánh trước tiên theo tiêu đề (từ điển, theo thứ tự chữ cái). 
Nếu các tiêu đề giống nhau, tiếp theo chúng ta sẽ so sánh chi phí (theo thứ tự giảm dần). 
Cách làm này đảm bảo thứ tự chính là theo tiêu đề, và nếu các tiêu đề giống nhau, chi phí sẽ được dùng để phân biệt 
(với chi phí cao hơn sẽ xuất hiện trước).

Question 3: Chúng ta có thể có nhiều quy tắc sắp xếp khác nhau nếu chúng ta sử dụng cách tiếp cận Comparable không?
Trả lời: Không, bạn không thể có nhiều quy tắc sắp xếp trực tiếp với interface Comparable vì phương thức compareTo() 
chỉ định một thứ tự "tự nhiên" duy nhất cho các đối tượng của lớp đó. Đây là quy tắc so sánh duy nhất được áp dụng 
cho việc sắp xếp các đối tượng cùng loại. Nếu bạn cần nhiều quy tắc sắp xếp khác nhau (ví dụ: theo tiêu đề rồi 
chi phí hoặc theo chi phí rồi tiêu đề), bạn sẽ cần sử dụng nhiều comparator khác nhau.

Question 4: Giả sử các DVD có quy tắc sắp xếp khác biệt so với các loại phương tiện khác, tức là theo tiêu đề, 
sau đó theo độ dài giảm dần, rồi đến chi phí. Làm thế nào để bạn thay đổi mã của mình để cho phép điều này?

Để hỗ trợ quy tắc sắp xếp khác biệt cho DVD (ví dụ, trước tiên theo tiêu đề, sau đó theo độ dài giảm dần, và cuối cùng là chi phí giảm dần), 
chúng ta có thể ghi đè phương thức compareTo() trong lớp DigitalVideoDisc (là lớp con của Media). 
Cách làm này giúp chúng ta áp dụng logic sắp xếp cụ thể cho DVD trong khi vẫn giữ nguyên thứ tự sắp xếp mặc định cho các phương tiện khác.

@Override
public int compareTo(Media other) {
    if (other instanceof DigitalVideoDisc) {
        DigitalVideoDisc dvd = (DigitalVideoDisc) other;
        
        // So sánh theo tiêu đề theo thứ tự chữ cái
        int titleComparison = this.getTitle().compareTo(dvd.getTitle());
        if (titleComparison != 0) {
            return titleComparison;  // Nếu tiêu đề khác nhau, trả về kết quả so sánh
        }

        // Nếu tiêu đề giống nhau, so sánh theo độ dài giảm dần
        int lengthComparison = Integer.compare(dvd.getLength(), this.getLength());
        if (lengthComparison != 0) {
            return lengthComparison;  // Nếu độ dài khác nhau, trả về kết quả so sánh
        }

        // Nếu tiêu đề và độ dài đều giống nhau, so sánh theo chi phí giảm dần
        return Float.compare(dvd.getCost(), this.getCost());  // Đảo ngược để có thứ tự giảm dần
    }

    // Nếu đối tượng khác không phải là DVD, sử dụng phương thức so sánh mặc định của lớp cơ sở
    return super.compareTo(other);
}
